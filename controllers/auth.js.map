{"version":3,"sources":["../../src/controllers/auth.js"],"names":["login","req","res","next","userRepository","where","email","body","then","data","user","JSON","parse","stringify","model","password","status","HttpStatus","ACCEPTED","json","accessToken","Boom","unauthorized","catch","err"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA;;;;;;;AAOO,SAASA,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACpCC,0BACGC,KADH,CACS;AAAEC,IAAAA,KAAK,EAAEL,GAAG,CAACM,IAAJ,CAASD;AAAlB,GADT,EAEGE,IAFH,CAESC,IAAD,IAAU;AACd,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,EAAiCK,KAA9C;;AAEA,QAAI,yBAAYb,GAAG,CAACM,IAAJ,CAASQ,QAArB,EAA+BL,IAAI,CAACK,QAApC,CAAJ,EAAmD;AACjD,aAAOb,GAAG,CAACc,MAAJ,CAAWC,yBAAWC,QAAtB,EAAgCC,IAAhC,CAAqCf,wBAAegB,WAAf,CAA2BV,IAA3B,CAArC,CAAP;AACD,KAFD,MAEO;AACL,YAAMW,cAAKC,YAAL,CAAkB,kBAAlB,CAAN;AACD;AACF,GAVH,EAWGC,KAXH,CAWUC,GAAD,IAASrB,IAAI,CAACqB,GAAD,CAXtB;AAYD","sourcesContent":["import Boom from '@hapi/boom';\nimport HttpStatus from 'http-status-codes';\n\nimport { comparePass } from '../utils/bcrypt';\nimport userRepository from '../repositories/userRepository';\n\n/**\n * Get all users.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function login(req, res, next) {\n  userRepository\n    .where({ email: req.body.email })\n    .then((data) => {\n      const user = JSON.parse(JSON.stringify(data)).model;\n\n      if (comparePass(req.body.password, user.password)) {\n        return res.status(HttpStatus.ACCEPTED).json(userRepository.accessToken(user));\n      } else {\n        throw Boom.unauthorized('invalid password');\n      }\n    })\n    .catch((err) => next(err));\n}\n"],"file":"auth.js"}