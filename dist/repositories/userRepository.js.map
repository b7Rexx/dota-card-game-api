{"version":3,"sources":["../../src/repositories/userRepository.js"],"names":["UserRepository","baseRepository","constructor","User","accessToken","id","date","Date","setDate","getDate","type","token","expire_at"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;AAGA,MAAMA,cAAN,SAA6BC,uBAA7B,CAA4C;AAC1C;;;AAGAC,EAAAA,WAAW,GAAG;AACZ,UAAMC,aAAN;AACD;AAED;;;;;;;;AAMAC,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEAD,IAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiB,CAA9B;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,KAAK,EAAE,0BAAYN,EAAZ,CAFF;AAGLO,MAAAA,SAAS,EAAEN;AAHN,KAAP;AAKD;;AAxByC;;eA0B7B,IAAIN,cAAJ,E","sourcesContent":["import User from '../models/user';\nimport baseRepository from './baseRepository';\nimport { getJwtToken } from '../utils/jwtAuth';\n\n/**\n * returns user repo\n */\nclass UserRepository extends baseRepository {\n  /**\n   * Init User Modal.\n   */\n  constructor() {\n    super(User);\n  }\n\n  /**\n   * Returns access token with expire time.\n   *\n   * @param {*} id\n   * @returns {*}\n   */\n  accessToken(id) {\n    const date = new Date();\n\n    date.setDate(date.getDate() + 1);\n\n    return {\n      type: 'bearer',\n      token: getJwtToken(id),\n      expire_at: date,\n    };\n  }\n}\nexport default new UserRepository();\n"],"file":"userRepository.js"}