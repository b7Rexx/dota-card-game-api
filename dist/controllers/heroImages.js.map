{"version":3,"sources":["../../src/controllers/heroImages.js"],"names":["fetchAll","req","res","next","heroImageRepository","getAll","then","data","json","catch","err","fetchById","getById","params","id","create","body","status","HttpStatus","CREATED","update","remove","NO_CONTENT"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;AAEA;;;;;;;AAOO,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkC;AACvCC,+BACGC,MADH,GAEGC,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;;;;;;;;;AAOO,SAASC,SAAT,CAAmBV,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACxCC,+BACGQ,OADH,CACWX,GAAG,CAACY,MAAJ,CAAWC,EADtB,EAEGR,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;;;;;;;;;AAOO,SAASK,MAAT,CAAgBd,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,+BACGW,MADH,CACUd,GAAG,CAACe,IADd,EAEGV,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACe,MAAJ,CAAWC,yBAAWC,OAAtB,EAA+BX,IAA/B,CAAoC;AAAED,IAAAA;AAAF,GAApC,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;;;;;;;;;AAOO,SAASU,MAAT,CAAgBnB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,+BACGgB,MADH,CACUnB,GAAG,CAACY,MAAJ,CAAWC,EADrB,EACyBb,GAAG,CAACe,IAD7B,EAEGV,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACM,IAAJ,CAAS;AAAED,IAAAA;AAAF,GAAT,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID;AAED;;;;;;;;;AAOO,SAASW,MAAT,CAAgBpB,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AACrCC,+BACGiB,MADH,CACUpB,GAAG,CAACY,MAAJ,CAAWC,EADrB,EAEGR,IAFH,CAESC,IAAD,IAAUL,GAAG,CAACe,MAAJ,CAAWC,yBAAWI,UAAtB,EAAkCd,IAAlC,CAAuC;AAAED,IAAAA;AAAF,GAAvC,CAFlB,EAGGE,KAHH,CAGUC,GAAD,IAASP,IAAI,CAACO,GAAD,CAHtB;AAID","sourcesContent":["import HttpStatus from 'http-status-codes';\n\nimport heroImageRepository from '../repositories/heroImageRepository';\n\n/**\n * Get all heros.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function fetchAll(req, res, next) {\n  heroImageRepository\n    .getAll()\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Get a hero by its id.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function fetchById(req, res, next) {\n  heroImageRepository\n    .getById(req.params.id)\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Create a new hero.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function create(req, res, next) {\n  heroImageRepository\n    .create(req.body)\n    .then((data) => res.status(HttpStatus.CREATED).json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Update a hero.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function update(req, res, next) {\n  heroImageRepository\n    .update(req.params.id, req.body)\n    .then((data) => res.json({ data }))\n    .catch((err) => next(err));\n}\n\n/**\n * Delete a hero.\n *\n * @param {Object} req\n * @param {Object} res\n * @param {Function} next\n */\nexport function remove(req, res, next) {\n  heroImageRepository\n    .remove(req.params.id)\n    .then((data) => res.status(HttpStatus.NO_CONTENT).json({ data }))\n    .catch((err) => next(err));\n}\n"],"file":"heroImages.js"}