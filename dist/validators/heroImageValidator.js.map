{"version":3,"sources":["../../src/validators/heroImageValidator.js"],"names":["schema","Joi","object","hero_id","number","label","required","image","string","path","allow","thumbnail","original","heroImageValidator","req","res","next","body","then","catch","err","findHeroImage","heroImageRepository","getById","params","id"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;;;AAEA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACxBC,EAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,KAAb,CAAmB,QAAnB,EAA6BC,QAA7B,EADe;AAExBC,EAAAA,KAAK,EAAEN,aAAIO,MAAJ,GAAaH,KAAb,CAAmB,OAAnB,EAA4BC,QAA5B,EAFiB;AAGxBG,EAAAA,IAAI,EAAER,aAAIO,MAAJ,GAAaH,KAAb,CAAmB,WAAnB,EAAgCK,KAAhC,CAAsC,IAAtC,EAA4CA,KAA5C,CAAkD,EAAlD,CAHkB;AAIxBC,EAAAA,SAAS,EAAEV,aAAIO,MAAJ,GAAaH,KAAb,CAAmB,WAAnB,EAAgCK,KAAhC,CAAsC,IAAtC,EAA4CA,KAA5C,CAAkD,EAAlD,CAJa;AAKxBE,EAAAA,QAAQ,EAAEX,aAAIO,MAAJ,GAAaH,KAAb,CAAmB,WAAnB,EAAgCK,KAAhC,CAAsC,IAAtC,EAA4CA,KAA5C,CAAkD,EAAlD;AALc,CAAX,CAAf;AAQA;;;;;;;;;;AAQA,SAASG,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC,EAA4C;AAC1C,SAAO,uBAASF,GAAG,CAACG,IAAb,EAAmBjB,MAAnB,EACJkB,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD;AAED;;;;;;;;;;AAQA,SAASC,aAAT,CAAuBP,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AACrC,SAAOM,6BACJC,OADI,CACIT,GAAG,CAACU,MAAJ,CAAWC,EADf,EAEJP,IAFI,CAEC,MAAMF,IAAI,EAFX,EAGJG,KAHI,CAGGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAHf,CAAP;AAID","sourcesContent":["import Joi from '@hapi/joi';\n\nimport validate from '../utils/validate';\nimport heroImageRepository from '../repositories/heroImageRepository';\n\n// Validation schema\nconst schema = Joi.object({\n  hero_id: Joi.number().label('HeroId').required(),\n  image: Joi.string().label('Image').required(),\n  path: Joi.string().label('Thumbnail').allow(null).allow(''),\n  thumbnail: Joi.string().label('Thumbnail').allow(null).allow(''),\n  original: Joi.string().label('Thumbnail').allow(null).allow(''),\n});\n\n/**\n * Validate create/update heroImage request.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction heroImageValidator(req, res, next) {\n  return validate(req.body, schema)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\n/**\n * Validate heroImages existence.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction findHeroImage(req, res, next) {\n  return heroImageRepository\n    .getById(req.params.id)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\nexport { findHeroImage, heroImageValidator };\n"],"file":"heroImageValidator.js"}