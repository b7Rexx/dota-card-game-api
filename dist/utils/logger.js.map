{"version":3,"sources":["../../src/utils/logger.js"],"names":["LOG_DIR","process","env","LOG_LEVEL","fs","existsSync","mkdirSync","logger","winston","createLogger","transports","Console","format","combine","colorize","simple","level","DailyRotateFile","timestamp","json","maxFiles","dirname","datePattern","filename","logStream","write","message","info","toString"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAEA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAAZ,IAAuB,MAAvC;AACA,MAAMG,SAAS,GAAGF,OAAO,CAACC,GAAR,CAAYC,SAAZ,IAAyB,MAA3C,C,CAEA;;AACA,IAAI,CAACC,YAAGC,UAAH,CAAcL,OAAd,CAAL,EAA6B;AAC3BI,cAAGE,SAAH,CAAaN,OAAb;AACD;AAED;;;;;AAGA,MAAMO,MAAM,GAAGC,iBAAQC,YAAR,CAAqB;AAClCC,EAAAA,UAAU,EAAE,CACV,IAAIF,iBAAQE,UAAR,CAAmBC,OAAvB,CAA+B;AAC7BC,IAAAA,MAAM,EAAEA,gBAAOC,OAAP,CAAeD,gBAAOE,QAAP,EAAf,EAAkCF,gBAAOG,MAAP,EAAlC,CADqB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAA/B,CADU,EAKV,IAAIR,iBAAQE,UAAR,CAAmBO,eAAvB,CAAuC;AACrCL,IAAAA,MAAM,EAAEA,gBAAOC,OAAP,CAAeD,gBAAOM,SAAP,EAAf,EAAmCN,gBAAOO,IAAP,EAAnC,CAD6B;AAErCC,IAAAA,QAAQ,EAAE,KAF2B;AAGrCJ,IAAAA,KAAK,EAAEb,SAH8B;AAIrCkB,IAAAA,OAAO,EAAErB,OAJ4B;AAKrCsB,IAAAA,WAAW,EAAE,YALwB;AAMrCC,IAAAA,QAAQ,EAAE;AAN2B,GAAvC,CALU;AADsB,CAArB,CAAf;;AAiBO,MAAMC,SAAS,GAAG;AACvB;;;;;AAKAC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACbnB,IAAAA,MAAM,CAACoB,IAAP,CAAYD,OAAO,CAACE,QAAR,EAAZ;AACD;;AARsB,CAAlB;;eAWQrB,M","sourcesContent":["import fs from 'fs';\r\nimport winston, { format } from 'winston';\r\n\r\nimport 'winston-daily-rotate-file';\r\n\r\n// Use LOG_DIR from env\r\nconst LOG_DIR = process.env.LOG_DIR || 'logs';\r\nconst LOG_LEVEL = process.env.LOG_LEVEL || 'info';\r\n\r\n// Create log directory if it does not exist\r\nif (!fs.existsSync(LOG_DIR)) {\r\n  fs.mkdirSync(LOG_DIR);\r\n}\r\n\r\n/**\r\n * Create a new winston logger.\r\n */\r\nconst logger = winston.createLogger({\r\n  transports: [\r\n    new winston.transports.Console({\r\n      format: format.combine(format.colorize(), format.simple()),\r\n      level: 'info'\r\n    }),\r\n    new winston.transports.DailyRotateFile({\r\n      format: format.combine(format.timestamp(), format.json()),\r\n      maxFiles: '14d',\r\n      level: LOG_LEVEL,\r\n      dirname: LOG_DIR,\r\n      datePattern: 'YYYY-MM-DD',\r\n      filename: '%DATE%-debug.log'\r\n    })\r\n  ]\r\n});\r\n\r\nexport const logStream = {\r\n  /**\r\n   * A writable stream for winston logger.\r\n   *\r\n   * @param {any} message\r\n   */\r\n  write(message) {\r\n    logger.info(message.toString());\r\n  }\r\n};\r\n\r\nexport default logger;\r\n"],"file":"logger.js"}