{"version":3,"sources":["../src/index.js"],"names":["Sentry","init","dsn","process","env","SENTRY_DSN","app","APP_PORT","PORT","APP_HOST","pathToSwaggerUi","require","absolutePath","set","locals","title","APP_NAME","version","APP_VERSION","use","Handlers","requestHandler","path","join","__dirname","express","static","stream","logStream","bodyParser","urlencoded","extended","errorHandler","json","routes","swaggerIndexContent","fs","readFileSync","toString","replace","get","req","res","send","redirect","genericErrorHandler","methodNotAllowed","listen","on","err","logger","error","captureException","exit"],"mappings":"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","sourcesContent":["import './env';\nimport './db';\n\nimport fs from 'fs';\nimport cors from 'cors';\nimport path from 'path';\nimport helmet from 'helmet';\nimport morgan from 'morgan';\nimport express from 'express';\nimport favicon from 'serve-favicon';\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport * as Sentry from '@sentry/node';\n\nimport routes from './routes';\nimport json from './middlewares/json';\nimport logger, { logStream } from './utils/logger';\nimport * as errorHandler from './middlewares/errorHandler';\n\n// Initialize Sentry\n// https://docs.sentry.io/platforms/node/express/\nSentry.init({ dsn: process.env.SENTRY_DSN });\n\nconst app = express();\n\nconst APP_PORT = process.env.PORT || 8080;\n// (process.env.NODE_ENV === 'test' ? process.env.TEST_APP_PORT : process.env.APP_PORT) || process.env.PORT || '3000';\nconst APP_HOST = process.env.APP_HOST || '0.0.0.0';\n\nconst pathToSwaggerUi = require('swagger-ui-dist').absolutePath();\n\napp.set('port', APP_PORT);\napp.set('host', APP_HOST);\n\napp.locals.title = process.env.APP_NAME;\napp.locals.version = process.env.APP_VERSION;\n\n// This request handler must be the first middleware on the app\napp.use(Sentry.Handlers.requestHandler());\n\napp.use(favicon(path.join(__dirname, '/../public', 'favicon.ico')));\napp.use(express.static('public'));\n\napp.use(cors());\napp.use(helmet());\napp.use(compression());\napp.use(morgan('tiny', { stream: logStream }));\napp.use(bodyParser.urlencoded({ extended: true }));\n// app.use(bodyParser.json());\napp.use(errorHandler.bodyParser);\napp.use(json);\n\n// API Routes\napp.use('/api', routes);\n\n// Swagger UI\n// Workaround for changing the default URL in swagger.json\n// https://github.com/swagger-api/swagger-ui/issues/4624\nconst swaggerIndexContent = fs\n  .readFileSync(`${pathToSwaggerUi}/index.html`)\n  .toString()\n  .replace('https://petstore.swagger.io/v2/swagger.json', '/api/swagger.json');\n\napp.get('/api-docs/index.html', (req, res) => res.send(swaggerIndexContent));\napp.get('/api-docs', (req, res) => res.redirect('/api-docs/index.html'));\napp.use('/api-docs', express.static(pathToSwaggerUi));\n\n// This error handler must be before any other error middleware\napp.use(Sentry.Handlers.errorHandler());\n\n// Error Middleware\napp.use(errorHandler.genericErrorHandler);\napp.use(errorHandler.methodNotAllowed);\n\n// app.listen(app.get('port'), app.get('host'), () => {\n//   logger.info(`Server started at http://${app.get('host')}:${app.get('port')}/api`);\n// });\napp.listen(app.get('port'));\n\n// Catch unhandled rejections\nprocess.on('unhandledRejection', (err) => {\n  logger.error('Unhandled rejection', err);\n\n  try {\n    Sentry.captureException(err);\n  } catch (err) {\n    logger.error('Sentry error', err);\n  } finally {\n    process.exit(1);\n  }\n});\n\n// Catch uncaught exceptions\nprocess.on('uncaughtException', (err) => {\n  logger.error('Uncaught exception', err);\n\n  try {\n    Sentry.captureException(err);\n  } catch (err) {\n    logger.error('Sentry error', err);\n  } finally {\n    process.exit(1);\n  }\n});\n\nexport default app;\n"],"file":"index.js"}