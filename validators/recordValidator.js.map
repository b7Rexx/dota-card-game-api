{"version":3,"sources":["../../src/validators/recordValidator.js"],"names":["schema","Joi","object","game_id","number","label","required","user_id","points","winner","boolean","default","recordValidator","req","res","next","body","then","catch","err","findRecord","recordRepository","getById","params","id"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;;;AAEA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACxBC,EAAAA,OAAO,EAAEF,aAAIG,MAAJ,GAAaC,KAAb,CAAmB,QAAnB,EAA6BC,QAA7B,EADe;AAExBC,EAAAA,OAAO,EAAEN,aAAIG,MAAJ,GAAaC,KAAb,CAAmB,QAAnB,EAA6BC,QAA7B,EAFe;AAGxBE,EAAAA,MAAM,EAAEP,aAAIG,MAAJ,GAAaC,KAAb,CAAmB,QAAnB,EAA6BC,QAA7B,EAHgB;AAIxBG,EAAAA,MAAM,EAAER,aAAIS,OAAJ,GAAcL,KAAd,CAAoB,QAApB,EAA8BM,OAA9B,CAAsC,CAAtC;AAJgB,CAAX,CAAf;AAOA;;;;;;;;;;AAQA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACvC,SAAO,uBAASF,GAAG,CAACG,IAAb,EAAmBhB,MAAnB,EACJiB,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD;AAED;;;;;;;;;;AAQA,SAASC,UAAT,CAAoBP,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoC;AAClC,SAAOM,0BACJC,OADI,CACIT,GAAG,CAACU,MAAJ,CAAWC,EADf,EAEJP,IAFI,CAEC,MAAMF,IAAI,EAFX,EAGJG,KAHI,CAGGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAHf,CAAP;AAID","sourcesContent":["import Joi from '@hapi/joi';\n\nimport validate from '../utils/validate';\nimport recordRepository from '../repositories/recordRepository';\n\n// Validation schema\nconst schema = Joi.object({\n  game_id: Joi.number().label('GameId').required(),\n  user_id: Joi.number().label('UserId').required(),\n  points: Joi.number().label('Points').required(),\n  winner: Joi.boolean().label('Winner').default(0),\n});\n\n/**\n * Validate create/update record request.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction recordValidator(req, res, next) {\n  return validate(req.body, schema)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\n/**\n * Validate records existence.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction findRecord(req, res, next) {\n  return recordRepository\n    .getById(req.params.id)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\nexport { findRecord, recordValidator };\n"],"file":"recordValidator.js"}