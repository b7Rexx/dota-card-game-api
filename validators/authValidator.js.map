{"version":3,"sources":["../../src/validators/authValidator.js"],"names":["schema","Joi","object","email","string","label","required","password","authValidator","req","res","next","body","then","catch","err"],"mappings":";;;;;;;AAAA;;AAEA;;;;AAEA;AACA,MAAMA,MAAM,GAAGC,aAAIC,MAAJ,CAAW;AACxBC,EAAAA,KAAK,EAAEF,aAAIG,MAAJ,GAAaD,KAAb,GAAqBE,KAArB,CAA2B,OAA3B,EAAoCC,QAApC,EADiB;AAExBC,EAAAA,QAAQ,EAAEN,aAAIG,MAAJ,GAAaC,KAAb,CAAmB,UAAnB,EAA+BC,QAA/B;AAFc,CAAX,CAAf;AAKA;;;;;;;;;;AAQA,SAASE,aAAT,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AACrC,SAAO,uBAASF,GAAG,CAACG,IAAb,EAAmBZ,MAAnB,EACJa,IADI,CACC,MAAMF,IAAI,EADX,EAEJG,KAFI,CAEGC,GAAD,IAASJ,IAAI,CAACI,GAAD,CAFf,CAAP;AAGD","sourcesContent":["import Joi from '@hapi/joi';\n\nimport validate from '../utils/validate';\n\n// Validation schema\nconst schema = Joi.object({\n  email: Joi.string().email().label('Email').required(),\n  password: Joi.string().label('Password').required(),\n});\n\n/**\n * Validate login request.\n *\n * @param   {Object}   req\n * @param   {Object}   res\n * @param   {Function} next\n * @returns {Promise}\n */\nfunction authValidator(req, res, next) {\n  return validate(req.body, schema)\n    .then(() => next())\n    .catch((err) => next(err));\n}\n\nexport { authValidator };\n"],"file":"authValidator.js"}